:root {
  --total: 700; // default total particles
}

@media screen and (max-width: 768px) {
  :root {
    --total: 400; // fewer particles for tablets
  }
}

@media screen and (max-width: 480px) {
  :root {
    --total: 200; // fewer particles for mobile devices
  }
}

$orb-size: 300px;
$particle-size: 3px;
$time: 20s; 
$base-hue: 0; // change for different colors (180 is nice)

html, body {
  height: 100%;
}

body {
  background: black;
  overflow-x: hidden;
}

.wrap {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 0; 
  height: 0; 
  transform-style: preserve-3d;
  perspective: 1000px;
  z-index: 0;
  animation: rotate $time infinite linear;
}

@keyframes rotate {
  100% {
    transform: rotateY(360deg) rotateX(360deg);
  }
}

.c {
  position: absolute;
  width: $particle-size;
  height: $particle-size;
  border-radius: 50%;
  opacity: 0; 
}

@for $i from 1 through 700 { // keep this constant
  $z: (random(360) * 1deg); 
  $y: (random(360) * 1deg); 
  $hue: ((40/700 * $i) + $base-hue); // keep total constant for calculation
  
  .c:nth-child(#{$i}) {
    animation: orbit#{$i} $time infinite;
    animation-delay: ($i * .01s); 
    background-color: hsla($hue, 100%, 50%, 1);
  }

  @keyframes orbit#{$i}{ 
    20% {
      opacity: 1; 
    }
    30% {
      transform: rotateZ(-$z) rotateY($y) translateX($orb-size) rotateZ($z); 
    }
    80% {
      transform: rotateZ(-$z) rotateY($y) translateX($orb-size) rotateZ($z); 
      opacity: 1;
    }
    100% {
      transform: rotateZ(-$z) rotateY($y) translateX(($orb-size * 3)) rotateZ($z); 
    }
  }
}

// Now we need to conditionally display particles based on screen size.
// Add this to your JavaScript or React component file.
